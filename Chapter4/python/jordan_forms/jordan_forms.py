# -*- coding: utf-8 -*-
"""jordan_forms.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1h3p8bWuCzDPy1j91FbktzffhvE6UrfiC
"""

import numpy as np
from sympy import Matrix

# Inverted Pendulum example
A = np.array([[0, 1, 0, 0],
              [0, 0, -9.8, 0],
              [0, 0, 0, 1],
              [0, 0, 19.6, 0]])

B = np.array([[0],
              [1],
              [0],
              [1]])

C = np.array([[1, 0, 0, 0],
              [0, 0, 1, 0]])
m = Matrix(A)
T, J = m.jordan_form()

# Convert SymPy Matrix P to NumPy array
T_np = np.array(T).astype(float)
J_np = np.array(J).astype(float)
# Transform B and C matrices
Bn = np.linalg.inv(T_np) @ B
Cn = C @ T_np


print("Transformation matrix T:")
print(P_np)
print("\nJordan form J:")
print(J_np)
print("\nTransformed B matrix (Bn):")
print(Bn)

print("\nTransformed C matrix (Cn):")
print(Cn)

#Example 3-13
A = np.array([[0, 1, 0, 3],
              [0, -1, 1, 10],
              [0, 0, 0, 1],
              [0, 0, -1, -2]])
m = Matrix(A)
T, J = m.jordan_form()

# Convert SymPy Matrix T to NumPy array
T_np = np.array(T).astype(float)
J_np = np.array(J).astype(float)
print("Transformation matrix T:")
print(T_np)
print("\nJordan form J:")
print(J_np)