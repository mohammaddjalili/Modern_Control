# -*- coding: utf-8 -*-
"""DCmotor_jordan.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S14TkOUwps0aH2bIltpl-r70GklmZFyS
"""

import numpy as np
from scipy.signal import StateSpace
from scipy.linalg import eig

# Define the system matrices
A = np.array([[0, 1, 0],
              [0, 0, 4.438],
              [0, -12, -24]])
b1 = np.array([[0],
               [0],
               [20]])
b2 = np.array([[0],
               [-7.396],
               [0]])
B = np.hstack((b1, b2))
C = np.array([[1, 0, 0],
              [0, 1, 0]])
D = np.array([[0], [0]])

# Create a state-space model
DC_motor = StateSpace(A, b1, C, D)  # Note only first input is used

# Compute the eigenvalues and eigenvectors of the matrix A
eigenvalues, eigenvectors = np.linalg.eig(A)

# Compute the eigenvalues and eigenvectors of the transpose of matrix A
eigenvalues_transpose, eigenvectors_transpose = np.linalg.eig(A.T)

# Create diagonal matrices of eigenvalues
e_matrix = np.diag(eigenvalues)
ee_matrix = np.diag(eigenvalues_transpose)

# Print the results
print("v:\n", eigenvectors)
print("ee:\n", e_matrix)
print("v:\n", eigenvectors_transpose)
print("ee:\n", ee_matrix)